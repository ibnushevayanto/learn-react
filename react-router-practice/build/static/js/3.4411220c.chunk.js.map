{"version":3,"sources":["components/quotes/HighlightedQuote.module.css","components/comments/Comments.module.css","components/comments/NewCommentForm.module.css","components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/quotes/HighlightedQuote.js","components/comments/NewCommentForm.js","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/Comments.js","pages/QuoteDetail.js"],"names":["module","exports","HighlightedQuote","props","className","classes","quote","text","author","NewCommentForm","commentTextRef","useRef","useHttp","addComment","sendRequest","error","status","params","useParams","submitFormHandler","event","preventDefault","parameter","comment","current","value","quoteId","id","setIsAddingComment","functionRequest","LoadingSpinner","form","onSubmit","control","htmlFor","rows","ref","actions","CommentItem","item","CommentsList","comments","map","Comments","useState","isAddingComment","getComments","data","useCallback","useEffect","console","log","onClick","QuoteDetail","reqDetailQuotes","match","useRouteMatch","isNotFound","setisNotFound","to","path","exact","url"],"mappings":"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","file":"static/js/3.4411220c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__1wd1a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__1tk_z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__1-jCq\",\"loading\":\"NewCommentForm_loading__2rMXg\",\"control\":\"NewCommentForm_control__23AQH\",\"actions\":\"NewCommentForm_actions__3w_ML\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__3j6GM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__2xA8W\"};","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import { useRef, Fragment } from \"react\";\nimport LoadingSpinner from \"../../components/UI/LoadingSpinner\";\nimport classes from \"./NewCommentForm.module.css\";\nimport { addComment } from \"../../lib/api\";\nimport useHttp from \"../../hooks/use-http\";\nimport { useParams } from \"react-router-dom\";\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n  const { sendRequest, error, status } = useHttp(addComment);\n  const params = useParams();\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n    sendRequest({\n      parameter: { comment: commentTextRef.current.value },\n      quoteId: params.id,\n    });\n    if (!error) {\n      props.setIsAddingComment(false);\n      props.functionRequest();\n    }\n  };\n\n  if (status === \"pending\") {\n    return (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  return (\n    <Fragment>\n      {error && <p className=\"centered focused\">{error}</p>}\n      <form className={classes.form} onSubmit={submitFormHandler}>\n        <div className={classes.control} onSubmit={submitFormHandler}>\n          <label htmlFor=\"comment\">Your Comment</label>\n          <textarea id=\"comment\" rows=\"5\" ref={commentTextRef}></textarea>\n        </div>\n        <div className={classes.actions}>\n          <button className=\"btn\">Add Comment</button>\n        </div>\n      </form>\n    </Fragment>\n  );\n};\n\nexport default NewCommentForm;\n","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.comment} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { useState, useEffect, useCallback } from \"react\";\nimport useHttp from \"../../hooks/use-http\";\nimport classes from \"./Comments.module.css\";\nimport NewCommentForm from \"./NewCommentForm\";\nimport { getComments } from \"../../lib/api\";\nimport { useParams } from \"react-router-dom\";\nimport LoadingSpinner from \"../../components/UI/LoadingSpinner\";\nimport CommentsList from \"./CommentsList\";\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const { sendRequest, status, error, data } = useHttp(getComments, true);\n  const params = useParams();\n  const functionRequest = useCallback(() => {\n    sendRequest(params.id);\n  }, [params.id, sendRequest]);\n\n  useEffect(() => {\n    if (status === \"pending\") {\n      functionRequest();\n    }\n  }, [status, functionRequest]);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  if (error) {\n    return <p className=\"centered focused\">{error}</p>;\n  }\n\n  if (status === \"pending\") {\n    return (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  console.log(data);\n\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className=\"btn\" onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && (\n        <NewCommentForm functionRequest={functionRequest} setIsAddingComment={setIsAddingComment} />\n      )}\n      <CommentsList comments={data} />\n    </section>\n  );\n};\n\nexport default Comments;\n","import HighlightedQuote from \"../components/quotes/HighlightedQuote\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { useEffect, useState } from \"react\";\r\nimport {\r\n  useParams,\r\n  Route,\r\n  Redirect,\r\n  Link,\r\n  useRouteMatch,\r\n} from \"react-router-dom\";\r\nimport Comments from \"../components/comments/Comments\";\r\nimport { reqDetailQuotes } from \"../lib/api\";\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\n\r\nconst QuoteDetail = () => {\r\n  const params = useParams();\r\n  const { sendRequest, status, data, error } = useHttp(reqDetailQuotes, true);\r\n\r\n  const match = useRouteMatch();\r\n  const [isNotFound, setisNotFound] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (status === \"pending\") {\r\n      sendRequest(params.id);\r\n    } else if (status === \"completed\") {\r\n      if (!data) {\r\n        setisNotFound(true);\r\n      }\r\n    }\r\n  }, [sendRequest, status, data, error, params.id]);\r\n\r\n  if (isNotFound) {\r\n    return <Redirect to=\"/no-quotes\" />;\r\n  }\r\n\r\n  if (status === \"pending\") {\r\n    return (\r\n      <div className=\"centered\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    status === \"completed\" && (\r\n      <section>\r\n        <HighlightedQuote text={data.text} author={data.author} />\r\n\r\n        <Route path={match.path} exact>\r\n          <div className=\"centered\">\r\n            <Link className=\"btn--flat\" to={`${match.url}/comments`}>\r\n              Load Comment\r\n            </Link>\r\n          </div>\r\n        </Route>\r\n\r\n        <Route path={`${match.path}/comments`}>\r\n          <Comments comments={[]} />\r\n        </Route>\r\n      </section>\r\n    )\r\n  );\r\n};\r\n\r\nexport default QuoteDetail;\r\n"],"sourceRoot":""}