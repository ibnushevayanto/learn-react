{"version":3,"sources":["components/UI/Card.module.css","components/quotes/QuoteForm.module.css","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","components/UI/Card.js","components/quotes/QuoteForm.js","pages/AddQuote.js"],"names":["module","exports","_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","Card","props","className","classes","card","children","QuoteForm","authorInputRef","useRef","textInputRef","useState","isFormActive","setisFormActive","setisFormActiveHandler","value","when","message","location","onFocus","bind","form","onSubmit","event","preventDefault","enteredAuthor","current","enteredText","onAddQuote","author","text","isLoading","loading","LoadingSpinner","control","htmlFor","type","id","ref","rows","actions","onClick","AddQuote","useHttp","reqSimpanQuotes","sendRequest","response","history","useHistory","addQuoteHandler","a","error","push"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,KAAO,qB,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,2BAA2B,QAAU,2BAA2B,QAAU,6B,mECAtH,SAASC,EAAyBC,EAAQC,GACvD,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IACIE,EAAKC,EADLC,ECHS,SAAuCJ,EAAQC,GAC5D,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IAEIE,EAAKC,EAFLC,EAAS,GACTC,EAAaC,OAAOC,KAAKP,GAG7B,IAAKG,EAAI,EAAGA,EAAIE,EAAWG,OAAQL,IACjCD,EAAMG,EAAWF,GACbF,EAASQ,QAAQP,IAAQ,IAC7BE,EAAOF,GAAOF,EAAOE,IAGvB,OAAOE,EDTM,CAA6BJ,EAAQC,GAGlD,GAAIK,OAAOI,sBAAuB,CAChC,IAAIC,EAAmBL,OAAOI,sBAAsBV,GAEpD,IAAKG,EAAI,EAAGA,EAAIQ,EAAiBH,OAAQL,IACvCD,EAAMS,EAAiBR,GACnBF,EAASQ,QAAQP,IAAQ,GACxBI,OAAOM,UAAUC,qBAAqBC,KAAKd,EAAQE,KACxDE,EAAOF,GAAOF,EAAOE,IAIzB,OAAOE,E,2CEXMW,EAJF,SAACC,GACZ,OAAO,qBAAKC,UAAWC,IAAQC,KAAxB,SAA+BH,EAAMI,Y,gCCmE/BC,EA9DG,SAACL,GACjB,IAAMM,EAAiBC,mBACjBC,EAAeD,mBACrB,EAAwCE,oBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KAaA,IAAMC,EAAyB,SAACC,GAC9BF,EAAgBE,IAGlB,OACE,eAAC,WAAD,WACE,cAAC,IAAD,CACEC,KAAMJ,EACNK,QAAS,SAACC,GAAD,MACP,qEAGJ,cAAC,EAAD,UACE,uBACEC,QAASL,EAAuBM,KAAK,MAAM,GAC3CjB,UAAWC,IAAQiB,KACnBC,SA3BR,SAA2BC,GACzBA,EAAMC,iBAEN,IAAMC,EAAgBjB,EAAekB,QAAQX,MACvCY,EAAcjB,EAAagB,QAAQX,MAIzCb,EAAM0B,WAAW,CAAEC,OAAQJ,EAAeK,KAAMH,KAgB5C,UAKGzB,EAAM6B,WACL,qBAAK5B,UAAWC,IAAQ4B,QAAxB,SACE,cAACC,EAAA,EAAD,MAIJ,sBAAK9B,UAAWC,IAAQ8B,QAAxB,UACE,uBAAOC,QAAQ,SAAf,oBACA,uBAAOC,KAAK,OAAOC,GAAG,SAASC,IAAK9B,OAEtC,sBAAKL,UAAWC,IAAQ8B,QAAxB,UACE,uBAAOC,QAAQ,OAAf,kBACA,0BAAUE,GAAG,OAAOE,KAAK,IAAID,IAAK5B,OAEpC,qBAAKP,UAAWC,IAAQoC,QAAxB,SACE,wBACEC,QAAS3B,EAAuBM,KAAK,MAAM,GAC3CjB,UAAU,MAFZ,kC,kCCnCGuC,UAjBE,WACf,MAAqCC,YAAQC,KAArCC,EAAR,EAAQA,YAAgBC,EAAxB,OACMC,EAAUC,cAEVC,EAAe,uCAAG,WAAOlC,GAAP,SAAAmC,EAAA,sEAChBL,EAAY9B,GADI,OAEjB+B,EAASK,OACZJ,EAAQK,KAAK,WAHO,2CAAH,sDAOrB,OACE,kCACE,cAAC,EAAD,CAAWxB,WAAYqB","file":"static/js/4.fcb236aa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__3NQLm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__2c9Qj\",\"loading\":\"QuoteForm_loading__AfLSx\",\"control\":\"QuoteForm_control__3E_AH\",\"actions\":\"QuoteForm_actions__2TqDG\"};","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import { useRef } from \"react\";\n\nimport Card from \"../UI/Card\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport classes from \"./QuoteForm.module.css\";\nimport { Prompt } from \"react-router-dom\";\nimport { useState, Fragment } from \"react\";\n\nconst QuoteForm = (props) => {\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n  const [isFormActive, setisFormActive] = useState(false);\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n\n  const setisFormActiveHandler = (value) => {\n    setisFormActive(value);\n  };\n\n  return (\n    <Fragment>\n      <Prompt\n        when={isFormActive}\n        message={(location) =>\n          \"Are you sure want to leave? All your entered data will be lost!\"\n        }\n      />\n      <Card>\n        <form\n          onFocus={setisFormActiveHandler.bind(null, true)}\n          className={classes.form}\n          onSubmit={submitFormHandler}\n        >\n          {props.isLoading && (\n            <div className={classes.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n\n          <div className={classes.control}>\n            <label htmlFor=\"author\">Author</label>\n            <input type=\"text\" id=\"author\" ref={authorInputRef} />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor=\"text\">Text</label>\n            <textarea id=\"text\" rows=\"5\" ref={textInputRef}></textarea>\n          </div>\n          <div className={classes.actions}>\n            <button\n              onClick={setisFormActiveHandler.bind(null, false)}\n              className=\"btn\"\n            >\n              Add Quote\n            </button>\n          </div>\n        </form>\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default QuoteForm;\n","import QuoteForm from \"../components/quotes/QuoteForm\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { reqSimpanQuotes } from \"../lib/api\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst AddQuote = () => {\r\n  const { sendRequest, ...response } = useHttp(reqSimpanQuotes);\r\n  const history = useHistory();\r\n\r\n  const addQuoteHandler = async (value) => {\r\n    await sendRequest(value);\r\n    if (!response.error) {\r\n      history.push(\"/quotes\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section>\r\n      <QuoteForm onAddQuote={addQuoteHandler} />\r\n    </section>\r\n  );\r\n};\r\nexport default AddQuote;\r\n"],"sourceRoot":""}