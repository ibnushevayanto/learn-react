{"version":3,"sources":["components/layout/MainNavigation.module.css","components/UI/LoadingSpinner.js","components/quotes/QuoteList.module.css","hooks/use-http.js","lib/api.js","components/quotes/QuoteItem.module.css","components/UI/LoadingSpinner.module.css","components/layout/Layout.module.css","store/quote/slice.js","store/index.js","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","pages/QuotesList.js","components/layout/MainNavigation.js","components/layout/Layout.js","App.js","index.js"],"names":["module","exports","LoadingSpinner","className","classes","spinner","httpReducer","state","action","type","data","error","status","errorMessage","useHttp","requestFunction","startWithPending","useReducer","httpState","dispatchHttp","sendRequest","useCallback","params","a","responseData","message","FIREBASE_DOMAIN","reqGetAllQuotes","fetch","response","json","ok","Error","Object","keys","map","res","id","reqSimpanQuotes","method","body","JSON","stringify","headers","reqDetailQuotes","quotesId","addComment","console","log","quoteId","parameter","getComments","key","transformedQuotes","quoteObj","push","quotesSlice","createSlice","name","initialState","items","reducers","SET_ITEMS","payload","quotesAction","actions","store","configureStore","reducer","quote","QuoteReducer","QuoteItem","props","item","text","author","to","QuoteList","quotes","ascending","history","useHistory","location","useLocation","isSortAscending","URLSearchParams","search","get","sorting","onClick","pathname","list","sort","quoteA","quoteB","QuotesList","itemsQuotes","useSelector","useState","IsLoad","setIsLoad","dispatch","useDispatch","useEffect","length","MainNavigation","header","logo","nav","activeClassName","active","Layout","main","children","QuoteDetail","React","lazy","NoQuotes","AddQuote","PageNotFound","App","fallback","path","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.75cf2d4d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__3KcTW\",\"logo\":\"MainNavigation_logo__2Jjfo\",\"nav\":\"MainNavigation_nav__3FbM9\",\"active\":\"MainNavigation_active__1wXqP\"};","import classes from './LoadingSpinner.module.css';\n\nconst LoadingSpinner = () => {\n  return <div className={classes.spinner}></div>;\n}\n\nexport default LoadingSpinner;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__16ACX\",\"sorting\":\"QuoteList_sorting__2h2J6\"};","import { useReducer, useCallback } from \"react\";\r\n\r\nfunction httpReducer(state, action) {\r\n  if (action.type === \"SEND\") {\r\n    return {\r\n      data: null,\r\n      error: null,\r\n      status: \"pending\",\r\n    };\r\n  } else if (action.type === \"SUCCESS\") {\r\n    return {\r\n      data: action.data,\r\n      error: null,\r\n      status: \"completed\",\r\n    };\r\n  } else if (action.type === \"ERROR\") {\r\n    return { data: null, error: action.errorMessage, status: \"completed\" };\r\n  }\r\n  return state;\r\n}\r\n\r\nconst useHttp = (requestFunction, startWithPending = false) => {\r\n  const [httpState, dispatchHttp] = useReducer(httpReducer, {\r\n    status: startWithPending ? 'pending' : null,\r\n    data: null,\r\n    error: null,\r\n  });\r\n\r\n  const sendRequest = useCallback(\r\n    async (params) => {\r\n      dispatchHttp({ type: \"SEND\" });\r\n      try {\r\n        const responseData = await requestFunction(params);\r\n        dispatchHttp({ data: responseData, type: \"SUCCESS\" });\r\n      } catch (e) {\r\n        dispatchHttp({ type: \"ERROR\", errorMessage: e.message });\r\n      }\r\n    },\r\n    [requestFunction]\r\n  );\r\n\r\n  return { ...httpState, sendRequest };\r\n};\r\n\r\nexport default useHttp;\r\n","const FIREBASE_DOMAIN = \"https://nuxt-blog-6b95b.firebaseio.com\";\r\n\r\nexport async function reqGetAllQuotes() {\r\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`);\r\n  const data = await response.json();\r\n\r\n  if (!response.ok) {\r\n    throw new Error(data.message || \"Could not fetch quotes.\");\r\n  }\r\n\r\n  const responseData = Object.keys(data).map((res) => ({\r\n    ...data[res],\r\n    id: res,\r\n  }));\r\n  return responseData;\r\n}\r\n\r\nexport async function reqSimpanQuotes(params) {\r\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`, {\r\n    method: \"POST\",\r\n    body: JSON.stringify(params),\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n  });\r\n  const data = await response.json();\r\n\r\n  if (!response.ok) {\r\n    throw new Error(data.error || \"Could not add quotes.\");\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nexport async function reqDetailQuotes(quotesId) {\r\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes/${quotesId}.json`)\r\n  const data = await response.json()\r\n\r\n  if (!response.ok) {\r\n    throw new Error(data.error || \"Could not fetch quote.\");\r\n  }\r\n\r\n  return data\r\n}\r\n\r\nexport async function addComment(params){\r\n  console.log(params)\r\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${params.quoteId}.json`, {\r\n    method: 'POST',\r\n    body: JSON.stringify(params.parameter),\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  });\r\n  const data = await response.json()\r\n\r\n  if (!response.ok) {\r\n    throw new Error(data.error || \"Could not add comments.\");\r\n  }\r\n\r\n  return null\r\n}\r\n\r\nexport async function getComments(quoteId) {\r\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${quoteId}.json`);\r\n  const data = await response.json();\r\n\r\n  if (!response.ok) {\r\n    throw new Error(data.message || 'Could not fetch quotes.');\r\n  }\r\n\r\n  const transformedQuotes = [];\r\n\r\n  for (const key in data) {\r\n    const quoteObj = {\r\n      id: key,\r\n      ...data[key],\r\n    };\r\n\r\n    transformedQuotes.push(quoteObj);\r\n  }\r\n\r\n  return transformedQuotes;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__207Qx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__1SJdR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__1DxTC\"};","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  items: [],\r\n};\r\n\r\nconst quotesSlice = createSlice({\r\n  name: \"quotes\",\r\n  initialState,\r\n  reducers: {\r\n    SET_ITEMS(state, action) {\r\n      state.items = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const quotesAction = quotesSlice.actions;\r\nexport default quotesSlice.reducer;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport QuoteReducer from \"./quote/slice\";\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    quote: QuoteReducer,\r\n  },\r\n});\r\n\r\nexport default store;\r\n","import classes from \"./QuoteItem.module.css\";\nimport { Link } from \"react-router-dom\";\n\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link className=\"btn\" to={`/quotes/detail/${props.id}`}>\n        View Fullscreen\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import { Fragment } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport QuoteItem from \"./QuoteItem\";\nimport classes from \"./QuoteList.module.css\";\n\nconst QuoteList = (props) => {\n  const history = useHistory();\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const isSortAscending = queryParams.get(\"sort\") === \"asc\";\n\n  const sortQuotes = (quotes, ascending) => {\n    return quotes.sort((quoteA, quoteB) => {\n      if (ascending) {\n        return quoteA.id > quoteB.id ? 1 : -1;\n      } else {\n        return quoteA.id < quoteB.id ? 1 : -1;\n      }\n    });\n  };\n\n  const sortHandler = () => {\n    history.push({\n      pathname: location.pathname,\n      search: `?sort=${isSortAscending ? \"desc\" : \"asc\"}`,\n    });\n  };\n\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={sortHandler}>\n          Sort {isSortAscending ? \"Ascending\" : \"Descending\"}{\" \"}\n        </button>\n      </div>\n      <ul className={classes.list}>\n        {sortQuotes(props.quotes, isSortAscending).map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","import QuoteList from \"../components/quotes/QuoteList\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { quotesAction } from \"../store/quote/slice\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { reqGetAllQuotes } from \"../lib/api\";\r\nimport { useState, useEffect } from \"react\";\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\n\r\nconst QuotesList = () => {\r\n  const itemsQuotes = useSelector((state) => state.quote.items);\r\n  const { sendRequest, status, data, error } = useHttp(reqGetAllQuotes, true);\r\n  const [IsLoad, setIsLoad] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (itemsQuotes.length === 0) {\r\n      if (status === \"pending\") {\r\n        sendRequest();\r\n      } else if (status === \"completed\") {\r\n        dispatch(quotesAction.SET_ITEMS(data));\r\n        setIsLoad(true);\r\n      }\r\n    }\r\n  }, [sendRequest, status, data, error, dispatch, itemsQuotes.length]);\r\n\r\n  if (status === \"pending\") {\r\n    if (itemsQuotes.length === 0) {\r\n      return (\r\n        <div className=\"centered\">\r\n          <LoadingSpinner />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <section>\r\n      {itemsQuotes.length ? (\r\n        <QuoteList quotes={[...itemsQuotes]} />\r\n      ) : (\r\n        IsLoad && <Redirect to=\"/no-quotes\" />\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default QuotesList;\r\n","import classes from \"./MainNavigation.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst MainNavigation = () => {\r\n  return (\r\n    <header className={classes.header}>\r\n      <div className={classes.logo}>Great Quotes</div>\r\n      <nav className={classes.nav}>\r\n        <ul>\r\n          <li>\r\n            <NavLink activeClassName={classes.active} to=\"/quotes\">\r\n              All Quotes\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink activeClassName={classes.active} to=\"/add-quote\">\r\n              Add a Quote\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default MainNavigation;\r\n","import classes from \"./Layout.module.css\";\r\nimport { Fragment } from \"react\";\r\nimport MainNavigation from \"./MainNavigation\";\r\n\r\nconst Layout = (props) => {\r\n  return (\r\n    <Fragment>\r\n      <MainNavigation />\r\n      <main className={classes.main}>{props.children}</main>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import React, { Suspense } from \"react\";\nimport { Route, Redirect, Switch } from \"react-router-dom\";\nimport QuotesList from \"./pages/QuotesList\";\nimport Layout from \"./components/layout/Layout\";\nimport LoadingSpinner from \"./components/UI/LoadingSpinner\";\n\n/**\n * Meload komponen dengan cara lazy loading\n */\nconst QuoteDetail = React.lazy(() => import(\"./pages/QuoteDetail\"));\nconst NoQuotes = React.lazy(() => import(\"./pages/NoQuotes\"));\nconst AddQuote = React.lazy(() => import(\"./pages/AddQuote\"));\nconst PageNotFound = React.lazy(() => import(\"./pages/PageNotFound\"));\n\nfunction App() {\n  return (\n    <Layout>\n      <Suspense\n        fallback={\n          <div className=\"centered\">\n            <LoadingSpinner />\n          </div>\n        }\n      >\n        <Switch>\n          <Route path=\"/\" exact>\n            <Redirect to=\"/quotes\" />\n          </Route>\n          <Route path=\"/quotes\" exact>\n            <QuotesList />\n          </Route>\n          <Route path=\"/quotes/detail/:id\">\n            <QuoteDetail />\n          </Route>\n          <Route path=\"/no-quotes\">\n            <NoQuotes />\n          </Route>\n          <Route path=\"/add-quote\">\n            <AddQuote />\n          </Route>\n          <Route path=\"*\">\n            <PageNotFound />\n          </Route>\n        </Switch>\n      </Suspense>\n    </Layout>\n  );\n}\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport store from \"./store/index\";\nimport { Provider } from \"react-redux\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}